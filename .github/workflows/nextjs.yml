# Updated workflow for building and deploying a Next.js site to GitHub Pages
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_ENV
            echo "command=install" >> $GITHUB_ENV
            echo "runner=yarn" >> $GITHUB_ENV
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_ENV
            echo "command=ci" >> $GITHUB_ENV
            echo "runner=npm run" >> $GITHUB_ENV
          else
            echo "Unable to determine package manager"
            exit 1
          fi
          touch out/.nojekyll

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: ${{ env.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
            node_modules
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: |
          ${{ env.manager }} ${{ env.command }}

      - name: Debug Environment Variables
        run: |
          printenv

      - name: Build with Next.js
        run: |
          ${{ env.runner }} build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_BASE_PATH: "/${{ github.repository }}"

      - name: Static HTML export with Next.js
        run: |
          ${{ env.runner }} export
        env:
          NODE_ENV: production
          NEXT_PUBLIC_BASE_PATH: "/${{ github.repository }}"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

# Note: Ensure that `next.config.js` is updated to include basePath
# Example:
# module.exports = {
#   basePath: process.env.NEXT_PUBLIC_BASE_PATH || '',
#   assetPrefix: process.env.NEXT_PUBLIC_BASE_PATH || '',
# }
